
.. _ch26_00:

Транспорт **appendfile**
========================

Транспорт **appendfile** доставляет сообщения путём добавления его к существующему файлу, или путём создания нового файла в заданной директории. Отдельные файлы, к которым добавляются сообщения, могут быть в традиционном формате UNIX mailbox, или, опционально, в формате MBX, поддерживаемом Pine MUA и даемоном University of Washington IMAP (его подерживают и другие). Когда каждое сообщение доставляется в отдельный файл, может использоваться, опционально, формат **maildir**, для дополнительной защиты от ошибок при доставке. Также поддерживается третья форма доставки в отдельные файлы, известная как **mailstore**. Для всех этих форматов, Exim, в случае необходимости, пытается создать необходимое число уровней директорий, при условии что установлена опция **create_directory**.

Код для опциональных форматов, по умолчанию не включен в бинарный файл Exim`a. Для включения соответствующего кода, необходимо в *Local/Makefile* установить SUPPORT_MBX, SUPPORT_MAILDIR и/или SUPPORT_MAILSTORE.

Exim распознаёт ошибки системной квоты, и генерит соответствующее сообщение. Также он поддерживает собственное управление квотами в транспорте, для использования когда системные средства недоступны, или по каким-то причинам не могут использоваться.

Если ошибка происходит при добавлении к файлу (например, превысилась квота, или заполнился раздел), Exim пытается восстановить старый размер файла и время его модификации. Если ошибка происходит при создании нового файла - файл удаляется.

Выполняется множество проверок безопасности до начала добавления новой информации к файлу, а сам файл блокируется. Детальное описание дано ниже, после списка частных опций.

Обычно, транспорт **appendfile** используется для локальной доставки в пользовательские ящики. Однако, он также может использоваться как псевдо-удалённый транспорт, для раскладывания сообщений в файлы, для удалённой доставки другими средствами, кроме exim`a. В этом случае, часто используется формат “пакетного SMTP” (смотрите опцию **use_bsmtp**).

.. _ch26_01:

Опции **file** и **directory**
------------------------------

Опция **file** определяет единичный файл, к которому добавляются сообщения; опция **directory** определяет директорию, в которой создаётся новый файл, содержащий сообщение. Может быть задана лишь одна из этих двух опций, и для нормальной доставки в почтовые ящики, одна из них должна быть установлена.

Однако, **appendfile** также используется для доставки сообщений в файлы или директории, имена которых (или части имён) получаются из яльясов, форвардинга, или операций фильтрации (например, команды **save** в пользовательском фильтре Exim`a). Когда выполняется такой транспорт, $local_part содержит локальную часть, которая альясится или форвардится, и $address_file содержит имя (или часть имени) файла или директории, сгенерённое операцией перенаправления. Есть два случая:

* Если не установлены ни **file** ни **directory**, операция перенаправления должна определить абсолютный путь (тот, который начинается с “/”). Это - большинство общих случаев, когда пользователи с локальными аккаунтами используют фильтрацию для сортировки почты по различным директориям. Смотрите, для примера, транспорт **address_file**, в дефолтовой конфигурации. Если путь завершается слэшем, предполагается, что это - имя директории. Доставка в директорию может быть вызвана  путём установки **maildir_format** или **mailstore_format**.
* Если **file** или **directory** установлены для доставки от переназначения [#]_, она используется для определения имени файла или директории для доставки. Обычно, содержимое $address_file используется каким-то образом в раскрытии строки.

Как пример второго случая, рассмотрите окружение где пользователи не имеют домашних директорий. Им можно разрешить использование команды фильтра Exim`a в форме::

    save folder23

или команды фильтра Sieve в форме::

    require "fileinto";
    fileinto "folder23";

В этой ситуации, раскрытие **file** или **directory** в транспорте должно преобразовать относительный путь в соответствующее абсолютное имя файла. В случае фильтров Sieve, должно быть обработано имя *inbox*. Это имя, используемое в качестве результата действия “keep” (“сохранить”), в фильтре. Этот пример показывает один способ обработать это требование::

    file = ${if eq{$address_file}{inbox} \
                {/var/mail/$local_part} \
                {${if eq{${substr_0_1:$address_file}}{/} \
                      {$address_file} \
                      {$home/mail/$address_file} \
                }} \
            }

С этой установкой опции **file**, *inbox* ссылается на стандартное расположение почтового ящика, абсолютные пути используются без изменения, и другие папки находятся в директории *mail*, внутри домашней директории.

.. note:: При обработке в фильтре Exim`a, относительный путь, типа *folder23* превращается в абсолютный, если роутеру известна домашняя директория. В частности, так обстоят дела, если установлена опция **check_local_user**. Если вы хотите предотвратить это во время маршрутизации, вы должны установить **router_home_directory** в пустое значение. Это вынуждает маршрутизатор передавать транспорту относительный путь. 

.. note:: Абсолютный путь в $address_file не обрабатывается как-то особенно; продолжает использоваться опция **file** или **directory**, если она установлена.

.. _ch26_02:

Частные опции для **appendfile**
--------------------------------

==============  ===============  =============  ==============
**allow_fifo**  Use: appendfile  Type: boolean  Default: false
==============  ===============  =============  ==============

Установка этой опции позволяет доставлять в именованные каналы (трубы, или FIFO) точно также как и в обычные файлы. Если, во время доставки, отстутсвует процесс читающий трубу, доставка задерживается.

=================  ===============  =============  ==============
**allow_symlink**  Use: appendfile  Type: boolean  Default: false
=================  ===============  =============  ==============

По умолчанию, **appendfile** не доставляет, если имя пути к файлу будет символической ссылкой. Установка этой опции смягчает это ограничение, но существуют проблемы безопасности связанные с использованием симлинков. Убедитесь, что вы знаете, что делаете, при установке этой опции. Точные детали того, что затрагивает эта опция, находятся после этого списка опций.

============  ===============  =============  ==============
**batch_id**  Use: appendfile  Type: string†  Default: unset
============  ===============  =============  ==============

Смотрите описание пакетной локальной доставки в главе :ref:`25 <ch25_00>`. Однако, пакетная доставка автоматически отключается для доставок **appendfile**, происходящих как результат форвардинга, альясинга, или других переназначений прямо в файл.

=============  ===============  =============  ==========
**batch_max**  Use: appendfile  Type: integer  Default: 1
=============  ===============  =============  ==========

Смотрите описание пакетной локальной доставки в главе :ref:`25 <ch25_00>`.

===============  ===============  =============  ==============
**check_group**  Use: appendfile  Type: boolean  Default: false
===============  ===============  =============  ==============

Когда эта опция установлена, проверяется группа владельца файла, заданного опцией **file**, для удостверения, что это та же самая группа, под которой выполняется процесс доставки. Дефолтовая настройка - ложна, поскольку дефолтовый режим - 0600, что означает, что группа не имеет значения.

===============  ===============  =============  =============
**check_owner**  Use: appendfile  Type: boolean  Default: true
===============  ===============  =============  =============

Когда эта опция установлена, проверяется владелец файла, заданного опцией **file**, для удостверения, что он тот же самый, под которым выполняется процесс доставки.

================  ===============  ============  ==================
**check_string**  Use: appendfile  Type: string  Default: see below
================  ===============  ============  ==================

Поскольку **appendfile** записывает сообщение, начало каждой строки проверяется на совпадение с **check_string**, и если оно происходит, совпавшие начальные символы заменяются на содержимое **escape_string**. Значение **check_string** - литеральная строка, а не регулярное выражение, и регистр содержащихся букв имеет значение.

Если установлена **use_bsmtp**, значение **check_string** и **escape_string** принудительно устанавливаются в “.” и “..”, соответственно, и любые конфигурационные настройки игнорируются. Иначе, - у них значения по умолчанию “From ” и “>From ” когда задана опция **file**, и незаданы, когда установлена любая из опций **directory**, **maildir** или **mailstore**.

Дефолтовые настройки, наряду с **message_prefix** и **message_suffix**, являются подходящими для традиционных “BSD”-майлбоксов, где строка, начинающаяся с “From ” указывает на начало нового сообщения. Все четыре опции нуждаются в изменении, если используется иной формат. Например, для доставки в почтовые ящики в формате MMDF::

    check_string = "\1\1\1\1\n"
    escape_string = "\1\1\1\1 \n"
    message_prefix = "\1\1\1\1\n"
    message_suffix = "\1\1\1\1\n"

====================  ===============  =============  =============
**create_directory**  Use: appendfile  Type: boolean  Default: true
====================  ===============  =============  =============

Когда эта опция истинна, exim пытается создать любые недостающие вышестоящие директории, для файла в который собирается производить запись. Режим созданного каталога, задаётся опцией **directory_mode**.

Владелец группы созданной директории сильно зависит от используемой операционной системы (и, возможно, файловой системы). Например, в Solaris, если родительский каталог имеет установленный бит “setgid”, его группа передаётся дочернему каталогу; если нет, используется текущая установленная группа. Однако, в FreeBSD, всегда используется родительская группа.

===============  ===============  ============  =================
**create_file**  Use: appendfile  Type: string  Default: anywhere
===============  ===============  ============  =================

Эта опция ограничивает местоположение файлов и директорий создаваемых этим транспортом. Это применяется к файлам, заданным опцией **file**, и директориям, заданным опцией **directory**. В случае доставки maildir, это применяется к директориям верхнего уровня, а не к нижележащим директориям maildir.

Опция должна быть установлена в одно из слов “anywhere”, “inhome”, или “belowhome”. Во втором и третьем случае, для транспорта должна быть установлена домашняя директория. Эта опция бесполезна, когда задаётся явное имя файла для обычной доставки в почтовые ящики. Она предназначена для случая, когда имя файла генерится из пользовательских файлов *.forward*. Обычно, они обрабатываются транспортом **appendfile**, вызыванным **address_file**. Также, смотрите опцию **file_must_exist**.

=============  ===============  =============  ==============
**directory**  Use: appendfile  Type: string†  Default: unset
=============  ===============  =============  ==============

Эта опция взаимоисключающая с опцией **file**, но одна из опций **file** или **directory** должна быть задана, исключая случай доставки как результата перенаправления (смотрите раздел :ref:`26.1 <ch26_01>`).

Когда задана опция **directory**, строка раскрывается, и сообщение доставляется в новый файл или файлы, или в подкаталог данного каталога, вместо добавления к единственному файлу почтового ящика. Поддерживается несколько различных форматов (смотрите **maildir_format** и **mailstore_format**), и смотрите раздел :ref:`26.4 <ch26_04>`, для дальнейших деталей о этой форме доставки.

==================  ===============  =============  ==================
**directory_file**  Use: appendfile  Type: string†  Default: see below
==================  ===============  =============  ==================

Когда установлена опция **directory**, но не установлены ни **maildir_format** ни **mailstore_format**, **appendfile** доставляет каждое сообщение в файл, имя которого получается в результате раскрытия строки этой опции. Значение по умолчанию::

    q${base62:$tod_epoch}-$inode

Значение по умолчанию генерит уникальное имя из текущего времени, в форме base62, и иноды файла. Переменная $inode доступна лишь при раскрытии этой опции.

==================  ===============  ===================  =============
**directory_mode**  Use: appendfile  Type: octal integer  Default: 0700
==================  ===============  ===================  =============

Если **appendfile** создаёт какие-либо директории как результат опции **create_directory**, их режим задаётся этой опцией.

=================  ===============  ============  ========================
**escape_string**  Use: appendfile  Type: string  Default: see description
=================  ===============  ============  ========================

Смотрите выше, опцию **check_string**.

========  ===============  =============  ==============
**file**  Use: appendfile  Type: string†  Default: unset
========  ===============  =============  ==============

Эта опция взаимоисключающая с опцией **directory**, но одна из опций **file** или **directory** должна быть задана, исключая случай доставки как результата перенаправления (смотрите раздел :ref:`26.1 <ch26_01>`). Опция **file** определяет единичный файл, к которому добавляется сообщение. Одна и более из опций **use_fcntl_lock**, **use_flock_lock** или **use_lockfile** должны быть заданы с опцией **file**.

Если вы используете более одного хоста для достаки через NFS в одни и те же почтовые ящики, вы всегда должны использовать файлы блокировки

Значение строки раскрывается для каждой доставки, и должно привести к абсолютному пути. Самые общие установки этой опции - вариации одного из этих примеров::

    file = /var/spool/mail/$local_part
    file = /home/$local_part/inbox
    file = $home/inbox

В первом примере, все доставки осуществляются в один и тот же каталог. Если exim сконфигурирован использовать файлы блокировки (смотрите ниже, опцию **use_lockfile**), он должен быть в состояниии создать файл в директории, таким образом, “липкий” (“sticky”) бит должен быть включен для возможности доставки, или, альтернативно, может использоваться опция **group** для выполнения доставки под групповым идентификатором, имеющим доступ к директории.

===============  ===============  ============  ==============
**file_format**  Use: appendfile  Type: string  Default: unset
===============  ===============  ============  ==============

Эта опция просит транспорт проверить формат существующего файла, до добавления к нему. Проверка состоит из соответствия специфической строке в начале файла. Значение опции состоит из чётного числа строк, разделённых двоеточиями. Первая из каждой пары - проверочная строка, и вторая - имя транспорта. Если транспорт, ассоциированный с совпавшей строкой, не является текущим транспортом, управление передаётся другому транспорту. Например, предположим что к стандартному транспорту **local_delivery** добавлено это::

    file_format = "From       : local_delivery :\
                   \1\1\1\1\n : local_mmdf_delivery"

Почтовые ящики, начинающиеся с “From”, продолжают обрабатываться этим транспортом, но для почтовых ящиков, начинающиеся с четырёх двоичных единиц, с символом новой строки, управление передаётся транспорту назваемому **local_mmdf_delivery**, который, видимо, сконфигурирован для осуществления доставки в формате MMDF. Если почтовый ящик не существует, или пуст, предполагается совпадение с текущим транспортом. Если начало почтового ящика не совпадает ни с одной строкой, или не задан транспорт чьё имя совпало, доставка задерживается.

===================  ===============  =============  ==============
**file_must_exist**  Use: appendfile  Type: boolean  Default: false
===================  ===============  =============  ==============

Если эта опция истинна, файл заданный опцией **file** должен существовать. Если это не так, происходит временная ошибка. Если эта опция не задана, в случае отсутствия файла он создаётся.

======================  ===============  ==========  ===========
**lock_fcntl_timeout**  Use: appendfile  Type: time  Default: 0s
======================  ===============  ==========  ===========

По умолчанию, транспорт **appendfile** использует неблокирующие вызовы *fcntl()*, при блокировке открытого файла почтового ящика. Если вызов неудачен, процесс доставки засыпает на **lock_interval**, и пробует снова, до времени **lock_retries**. Неблокирующие вызовы используются так, чтобы файл не оставлялся открытым в ожидании блокировки; причина этого заключается в желании сделать это безопасным насколько возможно, для доставок через NFS, в случае, когда процессы могли бы обращаться к почтовому ящику NFS без использования файла блокировки. Этого не должно быть, но недоразумения, и, следовательно, просчёты конфигурации возможны.

На загруженных системах, однако, производительность неблокирующей блокировки не столь хороша, как использование блокирующей блокировки с таймаутом. В этом случае, ожидание делается в системном вызове, и процесс доставки Exim`a овладевает блокировкой и может обработать, как только предыдущий держатель блокировки снимет её.

Если **lock_fcntl_timeout** установлена в ненулевое время, блокирование болкируется, с использованием этого таймаута. Всё ещё может быть некоторое повторение: максимальное число повторений

::

    (lock_retries * lock_interval) / lock_fcntl_timeout

округляется к следующему целому числу. Другими словами, полное время в течение которого **appendfile** пробует получить блокировку - примерно тоже самое, если **lock_fcntl_timeout** не установлена слишком большой.

Вы должны рассмотреть установку этой опции, если вы получаете много отсроченных локальных доставок из-за ошибок вида

::

    failed to lock mailbox /some/file (fcntl)

======================  ===============  ==========  ===========
**lock_flock_timeout**  Use: appendfile  Type: time  Default: 0s
======================  ===============  ==========  ===========

Этот таймаут применяется к блокировке файла, когда используется *flock()* (смотрите **use_flock**); таймаут работает в манере, похожей на **lock_fcntl_timeout**.

=================  ===============  ==========  ===========
**lock_interval**  Use: appendfile  Type: time  Default: 3s
=================  ===============  ==========  ===========

Эта опция определяет время ожидания между попытками блокировки файла. Смотрите ниже, для дополнительных деталей о блокировке.

================  ===============  =============  ===========
**lock_retries**  Use: appendfile  Type: integer  Default: 10
================  ===============  =============  ===========

Эта опция определяет максимальное число попыток блокировки файла. Значение нуля обрабатывается как единица. Смотрите ниже, для дополнительных деталей о блокировке.

=================  ===============  ===================  =============
**lockfile_mode**  Use: appendfile  Type: octal integer  Default: 0600
=================  ===============  ===================  =============

Эта опция определяет режим создаваемого файла блокировки, когда используется файл блокировки (смотрите опции **use_lockfile** и **use_mbx_lock**)

====================  ===============  ==========  ============
**lockfile_timeout**  Use: appendfile  Type: time  Default: 30m
====================  ===============  ==========  ============

Когда используется файл блокировки (смотрите опцию **use_lockfile**), если файл блокировки уже существует, и он старше этого значения, предполагается, что он был случайно оставлен, и exim пытается его удалить.

=====================  ===============  =============  ==============
**mailbox_filecount**  Use: appendfile  Type: string†  Default: unset
=====================  ===============  =============  ==============

Если эта опция установлена, она раскрывается, и результат берётся как текущее число файлов в почтовом ящике. Это должно быть десятичное число, опционально сопровождаемое K или M. Этим предоставлятся способ получить информацию из внешнего источника, обслуживающего данные.

================  ===============  =============  ==============
**mailbox_size**  Use: appendfile  Type: string†  Default: unset
================  ===============  =============  ==============

Если эта опция задана, она раскрывается, и результат берётся как текущий размер почтового ящика. Это должно быть десятичное число, опционально сопровождаемое K или M. Этим предоставлятся способ получить информацию из внешнего источника, обслуживающего данные. Это, вероятно, будет полезным для доставок **maildir**, где, в вычислительном отношении, дорого вычислить размер почтового ящика.

==================  ===============  =============  ==============
**maildir_format**  Use: appendfile  Type: boolean  Default: false
==================  ===============  =============  ==============

Если эта опция задана с опцией **directory**, доставка в новый файл, в формате “maildir” используемом другими почтовыми программами. Когда транспорт активизирован непосредственно от роутера **redirect** (например, транспорт **address_file** в дефолтовой конфигурации), установка **maildir_format** вызывает обработку пути переданного из роутера как каталога, вне зависмости, завершается, или нет, он на “/”. Эта опция доступна лишь если в *Local/Makefile* присутствует SUPPORT_MAILDIR. Для получения дополнительных деталей, смотрите раздел :ref:`26.5 <ch26_05>`.

=================================  ===============  ============  ==================
**maildir_quota_directory_regex**  Use: appendfile  Type: string  Default: See below
=================================  ===============  ============  ==================

Эта опция уместна лишь если установлена **maildir_use_size_file**. Она определяет регулярное выражение, для определения директорий, относительно директории квоты (смотрите **quota_directory**), которая должна быть включена в подсчёт квоты. Значение по умолчанию::

    maildir_quota_directory_regex = ^(?:cur|new|\..*)$

Этим включаются директории *cur* и *new*, и любые директории “maildir++” (директории, чьи имена начинаются с точки). Если вы хотите исключить из подсчёта директорию *Trash* (как делают некоторые сайты), вы должны изменить эту установку на 

::

    maildir_quota_directory_regex = ^(?:cur|new|\.(?!Trash).*)$

Это использует отрицательное предвидение в регулярном выражении, для исключения директории с именем *.Trash*.  Когда директория исключена из подсчёта квоты, обработка квоты пропускается для любых сообщений доставляемых в этот каталог.

===================  ===============  =============  ===========
**maildir_retries**  Use: appendfile  Type: integer  Default: 10
===================  ===============  =============  ===========

Эта опция определяет число повторов при записи файла в формате “maildir”. Смотрите ниже, раздел :ref:`26.5 <ch26_05>`.

===============  ===============  =============  ==============
**maildir_tag**  Use: appendfile  Type: string†  Default: unset
===============  ===============  =============  ==============

Эта опция применяется лишь к доставкам в формате “maildir”, и она описана ниже, в разделе :ref:`26.5 <ch26_05>`.

=========================  ===============  =============  ==============
**maildir_use_size_file**  Use: appendfile  Type: boolean  Default: false
=========================  ===============  =============  ==============

Установка этой опции в истину включает поддержку файлов *maildirsize*. Exim создаёт файлы *maildirsize* в “maildir”, если они не существуют, беря квоту из опции **quota** транспорта. Если квота не задана - значение равно нулю. Смотрите **maildir_quota_directory_regex**, выше и раздел :ref:`26.5 <ch26_05>` для получения дополнительных деталей.

==============================  ===============  ============  ==============
**maildirfolder_create_regex**  Use: appendfile  Type: string  Default: unset
==============================  ===============  ============  ==============

Значение этой опции - регулярное выражение. Если оно не задано, опция не имеет никакого эффекта. Иначе, до доставки “maildir”, выражение сравнивается с именем директрии “maildir”, т.е. директории содержащей субдиректории *new* и *tmp*, которые будут использоваться для доставки. Если есть соответствие, Exim проверяет существование файла с именем *maildirfolder* в директории, и создаёт его, если он не существует. Для получения дополнительных деталей, смотрите раздел :ref:`26.5 <ch26_05>`.

====================  ===============  =============  ==============
**mailstore_format**  Use: appendfile  Type: boolean  Default: false
====================  ===============  =============  ==============

Если эта опция установлена вместе с опцией **directory**, доставка осуществляется в два новых файла, в формате “mailstore”. Эта опция доступна лишь в случае, если при сборке Exim`a в *Local/Makefile* была опция SUPPORT_MAILSTORE. Для получения дополнительных деталей, смотрите раздел :ref:`26.4 <ch26_04>`.

====================  ===============  =============  ==============
**mailstore_prefix**  Use: appendfile  Type: string†  Default: unset
====================  ===============  =============  ==============

Эта опция применяется только к доставкам в формате “mailstore”, и она описана ниже, в разделе :ref:`26.4 <ch26_04>`.

====================  ===============  =============  ==============
**mailstore_suffix**  Use: appendfile  Type: string†  Default: unset
====================  ===============  =============  ==============

Эта опция применяется только к доставкам в формате “mailstore”, и она описана ниже, в разделе :ref:`26.4 <ch26_04>`.

==============  ===============  =============  ==============
**mbx_format**  Use: appendfile  Type: boolean  Default: false
==============  ===============  =============  ==============

Эта опция доступна лишь в случае, если при сборке Exim`a в *Local/Makefile* была опция SUPPORT_MBX. Если опция **mbx_format** установлена с опцией **file**, сообщение добавляется к почтовому ящику в формате MBX, вместо формата традиционного UNIX. Этот формат поддерживается Pine4, и связан с его POP3 и IMAP даемонами путём используемой всеми ими “c-client” библиотеки.

.. note:: Опции **message_prefix** и **message_suffix** не меняются автоматически, при использовании **mbx_format**. Обычно, при использовании формата MBX, они должны устанавливаться пустыми, таким образом, эта опция почти всегда появляется в такой комбинации:

  ::

      mbx_format = true
      message_prefix =
      message_suffix =

   
Если в конфигурации не упомянута ни одна из опций блокировки, предполагается “use_mbx_lock”, и другие опции блокировки, по дефолту, ложны. С **mbx_format** возможно определить другие виды блокировок, но **use_fcntl_lock** и **use_mbx_lock** являются взаимоисключающими. Блокировка MBX взаимодействует с “c-client”, предоставляя общий [#]_ доступ к почтовому ящику. Она не должна использоваться, если любая иная программа, не использующая эту форму блокировки, собирается обращаться к этому почтовому ящику, или если почтовый ящик находится на файловой системе смонтированной по NFS, поскольку она работает лишь когда к почтовому ящику обращаются с одного хоста.

Если вы устанавливаете **use_fcntl_lock** с почтовыми ящиками в формате MBX, вы не можете использовать станадартную версию “c-client”, поскольку пока есть открытый ящик (это бывает при сессии Pine или IMAP), Exim не в состоянии добавить к нему сообщение.

==================  ===============  =============  ==================
**message_prefix**  Use: appendfile  Type: string†  Default: see below
==================  ===============  =============  ==================

Строка заданная в этом пункте раскрывается и выводится в начале каждого сообщения. По умолчанию, она незадана, если не определена опция **file**, и не установлена **use_bsmtp**, когда она::

    message_prefix = "From ${if def:return_path{$return_path}\
                            {MAILER-DAEMON}} $tod_bsdinbox\n"

.. note:: Если вы устаналиваете опцию **use_crlf** в истину, вы должны изменить любые упоминания “\n” на “\r\n” в **message_prefix**.

==================  ===============  =============  ==================
**message_suffix**  Use: appendfile  Type: string†  Default: see below
==================  ===============  =============  ==================

Строка заданная в этом пункте раскрывается и выводится в конце каждого сообщения. По умолчанию, она незадана, если не определена опция **file**, и не установлена **use_bsmtp**, в этих случаях она состоит из единственного символа - символа новой строки. Суффикс может быть подавлен путём установки::

    message_suffix =

.. note:: Если вы устаналиваете опцию **use_crlf** в истину, вы должны изменить любые упоминания “\n” на “\r\n” в **message_suffix**.

========  ===============  ===================  =============
**mode**  Use: appendfile  Type: octal integer  Default: 0600
========  ===============  ===================  =============

Если создаётся файл вывода - на него устанавливается такой режим. Если он существует и на него установлены более широкие разрешения, они уменьшаются до указанного в этой опции. Если на него установлены более жёсткие ограничения, то происходит ошибка, если неложна опция **mode_fail_narrower**. Однако, если доставка - результат команды **save** в файле фильтра, задающей особый режим, режим выходного файла всегда принудительно приводится к этому значению, и эта опция игнорируется.

======================  ===============  =============  =============
**mode_fail_narrower**  Use: appendfile  Type: boolean  Default: true
======================  ===============  =============  =============

Эта опция применяется в случае, когда существующий файл почтового ящика имеет более строгие ограничения чем заданные опцией **mode**. Если опция **mode_fail_narrower** истинна - доставка задерживается (“mailbox has the wrong mode”); иначе - Exim продолжает попытки достаки, используя существующий режим файла.

=================  ===============  =============  ==============
**notify_comsat**  Use: appendfile  Type: boolean  Default: false
=================  ===============  =============  ==============

Если эта опция истинна, даемон *comsat* уведомляется после каждой успешной доставки в пользовательский почтовый ящик. Это даемон, который уведомляет залогиненых пользователей о пришедшей почте.

=========  ===============  =============  ==============
**quota**  Use: appendfile  Type: string†  Default: unset
=========  ===============  =============  ==============

Эта опция налагает ограничения на размер файла, к которому Exim добавляет сообщение, или на полный размер используемый деревом директорий, когда установлена опция **directory**. В последнем случае, вычисление используемого места дорого стоит, поскольку должны быть индивидуально осмотрены и просуммированы все файлы в директории (и любых субдиректориях). (Смотрите **quota_size_regex** и **maildir_use_size_file** для способов избежать этого в окружении где пользователи не имеют shell-доступа к своим почтовым ящикам.)
   
Нет блокировки от двух одновременных доставок в многофайловый почтовый ящик, и в этом случае возможно превышение квоты. Для однофайловых почтовых ящиков, разумеется, блокировка - необходимость.


Размер файла берётся как его используемое значение. Из-за эффектов блокировки, оно может быть намного меньше дискового пространства, фактически используемого файлом. Если складываются размеры большого числа файлов, эффект округления может стать весьма заметным, особенно на системах использующих большой размер блока. Однако, кажется лучше придерживаться используемого числа, поскольку оно - очевидное значение, наиболее легко понимаемое пользователями.

Значение опции раскрывается, и должно быть числовым значением (разрешена десятичная точка), опционально сопровождаемая одной из букв K, M, или G - для килобайт, мегабайт, или гигабайт. Если exim работает на системе с поддержкой больших файлов (FreeBSD и Linux имеют такую поддержку), могут быть обработаны ящики более 2G размером.

.. note:: Значение нуля интерпретируется как “нет квоты”.

Раскрытие происходит когда Exim работает как root, до того, как он для доставки меняет uid. Это означает, что для содержания квоты, которая ищется в раскрытии можно использовать файлы, которые недоступны конечному пользователю. При неудаче доставки по причине превышения квоты, ошибка обрабатывается как ошибка системной квоты.

По умолчанию, проверка квоты Exim`ом подражает системным квотам, и ограничивает почтовый ящик заданным максимальным размером, хотя значение не является точным до последнего байта, из-за строк разделителей, и дополнительных заголовков, которые могут добавляться при доставке сообщения. Когда почтовый ящик почти полный, большие сообщения могут быть отклонены, а маленькие приняты, поскольку размер текущего сообщения добавляется к квоте, при проверке. Это поведение может быть изменено путём установки **quota_is_inclusive** в ложь. Когда это сделано, проверка на превышение квоты не включает текущее сообщение. Таким образом, доставки продолжаются до превышения квоты; после этого никакие последующие сообщения не доставляются. Также смотрите опцию **quota_warn_threshold**.

===================  ===============  =============  ==============
**quota_directory**  Use: appendfile  Type: string†  Default: unset
===================  ===============  =============  ==============

Эта опция задаёт директорию для проверки квоты при доставке в отдельные файлы. ПО умолчанию - это директория для доставки, или, если в “maildir” директории существует файл с именем *maildirfolder*, родительский каталог, по отношению к директории для доставки.

===================  ===============  =============  ==========
**quota_filecount**  Use: appendfile  Type: string†  Default: 0
===================  ===============  =============  ==========

Эта опция применяется когда установлена опция **directory**. Она ограничивает общее число файлов в директории (сравните с лимитом на иноды в системных квотах). Она может использоваться, лишь когда установлена опция **quota**. Значение раскрывается; ошибка доставки вызывает задержку доставки. Значение нуля интерпретируется как “нет квоты”.

======================  ===============  =============  =============
**quota_is_inclusive**  Use: appendfile  Type: boolean  Default: true
======================  ===============  =============  =============

Смотрите выше, опцию **quota**.

====================  ===============  ============  ==============
**quota_size_regex**  Use: appendfile  Type: string  Default: unset
====================  ===============  ============  ==============

Эта опция применяется когда используется один из режимов доставки, записывающий отдельный файл для каждого сообщения. Когда Exim хочет найти размер одного из этих файлов, для проверки квоты, он вначале проверяет **quota_size_regex**. Если она установлена в регулярное выражение, которое совпадает с именем файла, и является одной строкой, строка интерпретируется как представление размера файла. Значение **quota_size_regex** не раскрывается.

Эта особенность полезна лишь когда пользователи не имеют shell-доступа к своим почтовым ящикам - иначе они могли бы обойти квоту простым переименованием файлов. Это средство может использоваться для “maildir” доставок, путём установки “maildir_tag” для добавления длинны файла к имени файла. Например::

    maildir_tag = ,S=$message_size
    quota_size_regex = ,S=(\d+)

Альтернативой $message_size является $message_linecount, которая содержит число линий в сообщений.

Регулярное выражение не должно предполагать что размер сообщения - в конце имени файла (даже при том, что её там помещает “maildir_tag”), поскольку MUA обрабатывающие “maildir” иногда добавляют иную информацию в конец имени сообщения.

======================  ===============  =============  ==================
**quota_warn_message**  Use: appendfile  Type: string†  Default: see below
======================  ===============  =============  ==================

Смотрите ниже, при использование этой опции. Если эта опция не задана, когда установлена **quota_warn_threshold**, значение по умолчанию будет::

    quota_warn_message = "\
      To: $local_part@$domain\n\
      Subject: Your mailbox\n\n\
      This message is automatically created \
      by mail delivery software.\n\n\
      The size of your mailbox has exceeded \
      a warning threshold that is\n\
      set by the system administrator.\n"

========================  ===============  =============  ==========
**quota_warn_threshold**  Use: appendfile  Type: string†  Default: 0
========================  ===============  =============  ==========

Эта опция раскрывается точно таким же образом, как и **quota** (смотрите выше). Если результирующее значение больше нуля, и доставка сообщения приводит к размеру файла или общему размеру дерева директорий более данного порога, посылается предупреждающее сообщение. Если, также, установлена **quota**, порог может быть определён как процент от её значения, путём сопровождения значения символом процента. Например::

    quota = 10M
    quota_warn_threshold = 75%

Если **quota** не задана, установка **quota_warn_threshold** заканчивающаяся символом процента - игнорируется.

Само предупреждающее сообщение определяется путём опции **quota_warn_message**, и оно должно начинаться со строки заголовка “To:”, содержащей получателя (получателей) предупреждающего сообщения. Они не обязательно должны включать отправителей оригинального сообщения. Также, обычно, должна предоставляться строка “Subject:”. Вы можете включить любые другие строки заголовков, которые вам необходимы. Если вы не включите строку “From:”, то значение по умолчанию будет::

    From: Mail Delivery System <mailer-daemon@$qualify_domain_sender>

Если вы предоставляете строку “Reply-To:”, она перезадаёт глобальную опцию **errors_reply_to**.

Опция **quota** не нуждается в приведении в порядок, для использования этой опции; они независимы друг от друга, кроме случаев, когда порог определён как процент.

=============  ===============  =============  ==============
**use_bsmtp**  Use: appendfile  Type: boolean  Default: false
=============  ===============  =============  ==============

Если эта опция установлена в истину, **appendfile** пишет сообщения в формате “пакетного SMTP”, с отправителем конверта и получателем(получателями) включёнными в SMTP-команды. Если вы хотите включить начальную команду HELO в эти сообщения, вы можете это сделать путём установки опции **message_prefix**. Для получения дополнительных деталей о пакетном SMTP, смотрите раздел :ref:`45.10 <ch45_10>`.

============  ===============  =============  ==============
**use_crlf**  Use: appendfile  Type: boolean  Default: false
============  ===============  =============  ==============

Эта опция заставляет строки заканчиваться двухсимвольной CRLF последовательностью (возврат каретки, перевод строки), вместо одного символа перевода строки. В случае пакетного SMTP, записанная в файл последовательность байт, - точное изображение того, что произвело бы отключение реального SMTP-соединения.

.. warning:: Содержимое опций **message_prefix** и **message_suffix** (которые используется для подстановки в традиционном “From ” и разделителей пустых строк в почтовых ящиках типа Berkeley) пишется дословно, таким образом, они должны содержать свои символы возврата каретки, если они необходимы. В случаях, когда эти опции имеют непустые значения по умолчанию, значение завершается единственным переводом строки, таким образом, они должны быть изменены, чтобы заканчиваться на “\r\n”, если установлена опция **use_crlf**.

==================  ===============  =============  ==================
**use_fcntl_lock**  Use: appendfile  Type: boolean  Default: see below
==================  ===============  =============  ==================

Эта опция контролирует использование функции *fcntl()*, для блокировки файла в целях исключительного использования, при добавлении сообщения. По умолчанию, она установлена, когда не установлена **use_flock_lock**. Иначе, она должна быть выключена, лишь если вы знаете что все ваши MUA используют блокировку путём файла блокировки. Когда не установлены обе опции, **use_fcntl_lock** и **use_flock_lock**, опция **use_lockfile** должна быть задана.

==================  ===============  =============  ==============
**use_flock_lock**  Use: appendfile  Type: boolean  Default: false
==================  ===============  =============  ==============

Эта опция предоставлена для поддержки блокировки файлов с использованием *flock()*, в тех немногих ситуациях, когда это необходимо. Самые современные операционные системы поддерживают блокировки *fcntl()* и *lockf()*, и эти две функции взаимодействуют друг с другом. По умолчанию, Exim использует блокировку *fcntl()*.

Эта опция требуется лишь если вы используете операционную систему где *lockf()* используется программами обращающимися к почтовым ящикам (обычно - MUA), и где *flock()* некорректно взаимодействует с *fcntl()*. Если вы хотите, то можете одновременно использовать обе блокировки *fcntl()* и *flock()*.

Не все операционные системы предоставляют *flock()*. Некоторые версии Solaris не имеют её (и некоторые, я думаю, предоставляют не совсем правильные версии, собранные на верху *lockf()*). Если операционная система не имеет *flock()*, Exim будет собран без способности её использовать, и любые попытки сделать это приведут к конфигурационной ошибке.

.. warning:: Блокировка *flock()* не работает на NFS файлах (только если *flock()* не отображается (mapped) на *fcntl()* с помощью операционной системы).

================  ===============  =============  ==================
**use_lockfile**  Use: appendfile  Type: boolean  Default: see below
================  ===============  =============  ==================

Если эта опция выключена, exim не пытается создать файл блокировки при добавлении к файлу почтового ящика. В этой ситуации, единственная блокировка - *fcntl()*. Вы должны отключать **use_lockfile** лишь в случае, если вы абсолютно уверены, что любые MUA, которые когда-либо будут просматривать почтовые ящики пользователей, используют *fcntl()* вместо блокировочного файла и тогда, когда вы не передаёт через NFS более чем от одного хоста.

Для безопасного добавления к файлам NFS более чем от одного хоста, необходимо снять блокировку до открытия файла, и блокировочный файл достигает этого. Иначе, даже с блокировкой *fcntl()*, есть риск повреждения файла.

Опция **use_lockfile** установлена по умолчанию, если не задана **use_mbx_lock**. Не возможно выключить обе опции - **use_lockfile** и **use_fcntl_lock**, кроме случаев, когда установлена **mbx_format**.

================  ===============  =============  ==================
**use_mbx_lock**  Use: appendfile  Type: boolean  Default: see below
================  ===============  =============  ==================

Эта опция доступна лишь когда Exim скомпилирован с установленной SUPPORT_MBX в *Local/Makefile*. Установка опции определяет, что используются специальные правила блокировки MBX. По умолчанию, она установлена, если установлена **mbx_format**, и ни одной опции блокировки нет в конфигурации. Правила блокировки - такие же, как используются библиотекой “c-client”, лежащей в основе даемонов Pine, IMAP4 и POP, которые идут вместе с ней (ниже, смотрите обсуждение). Правила разрешают общий доступ к почтовому ящику. Однако, этот вид блокироки не работает, когда почтовый ящик примонтирован по NFS.

Вы можете установить **use_mbx_lock** с одной или обеими опциями **use_fcntl_lock** **use_flock_lock** для контроля, какая блокировка используется в осуществлении правил блокировки MBX. Значение по умолчанию использует *fcntl()* если **use_mbx_lock** установлена без **use_fcntl_lock** или **use_flock_lock**.


.. _ch26_03:

Операционные детали при добавления
----------------------------------


.. _ch26_04:

Операционные детали для доставки в новый файл
---------------------------------------------


.. _ch26_05:

Доставка **maildir**
--------------------


.. _ch26_06:

Использование тэгов для записи размера сообщений
------------------------------------------------


.. _ch26_07:

Использование файла **maildirsize**
-----------------------------------


.. _ch26_08:

Доставка **mailstore**
----------------------


.. _ch26_09:

Неспециальная доставка в новый файл
-----------------------------------

.. [#] редиректа [redirection] - прим. lissyara
.. [#] может быть - распределённый - прим. lissyara
